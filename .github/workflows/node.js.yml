# This workflow will do a clean install of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: deploy to s3

on:
  push:
    # Publish `master` as Docker `latest` image.
    branches:
      - release*

    # Publish `v1.2.3` tags as releases.
    tags:
      - v*

jobs:
  build:

    runs-on: ubuntu-latest


    steps:
    # checkout code
    - uses: actions/checkout@v2
    
    # configure aws cli
    - name: "Configure AWS Credentials"
      # You may pin to the exact commit or the version.
      # uses: aws-actions/configure-aws-credentials@0d9a5be0dceea74e09396820e1e522ba4a110d2f
      uses: aws-actions/configure-aws-credentials@v1
      with:
        # AWS Access Key ID. This input is required if running in the GitHub hosted environment. It is optional if running in a self-hosted environment that already has AWS credentials, for example on an EC2 instance.
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        # AWS Secret Access Key. This input is required if running in the GitHub hosted environment. It is optional if running in a self-hosted environment that already has AWS credentials, for example on an EC2 instance.
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        # AWS Region, e.g. us-east-2
        aws-region: ${{ secrets.AWS_REGION }}

    
    - name: Use Node.js 14
      uses: actions/setup-node@v2
      with:
        node-version: 14
        cache: 'npm'
        cache-dependency-path: package.json
        
    - run: npm i
    - run: npm run build
    
    - name: Copy files to the test website with the AWS CLI
      run: |
        aws s3 sync ./dist "s3://${{ secrets.AWS_BUCKET }}"
